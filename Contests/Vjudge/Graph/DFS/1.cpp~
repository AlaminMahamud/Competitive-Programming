#include <bits/stdc++.h>
#define valid(nx,ny,n,m) nx >= 0 && nx < n && ny >= 0 && ny < m
#define  REP(i,n) for(int i = 0; i < n; i++)
using namespace std;

int dfs(int p, int q){

  int dx[] = { +1, -1, 0, 0};
  int dy[] = { 0, 0,  +1, -1};
  int nx, ny;
  mark[p][q] = false;
  REP(k, 4){
    nx = p + dx[k];
    ny = q + dy[k];
    if(valid(nx, ny, n, m)){
      if(mark[nx][ny])
	dfs(nx,ny);
    }
  }    
}  


int n, m;
char c[105][105];
bool mark[105][105];
int main(){
  cin >> n >> m;

  REP(i,n){
    REP(j,n){
      cin >> c[i][j];
    }
  }
  int count = 0;
  memset(mark, true, sizeof(mark));
  for(int i = 0 ; i < n; i++){
    for(int j = 0; j < m; j++){
          if(mark[i][j])
	    dfs(i, j);
	  count++;
    }
  }


  
  return 0;
}
